@startuml
'https://plantuml.com/class-diagram

package Read {
  package Queries {
    class GetFavoritePostQuery {
      execute(): List<ReadPost>
    }
  }

  package ReadModel {
    class ReadPost {
      description: string
      nbLikes: int
    }
  }

  package ReadRepository {
    class ReadRepo {
      getByLike(): List<ReadPost>
    }
  }
}

package Write {
  package Commands {
    class CreatePostCommand {
      execute(userId: int, description: string) : string;
    }

    class LikePostCommand {
      execute(userId: int, postId: string): void;
    }
  }

  package WriteModel {
    class WritePost {
      id: string
      content: string
      createdBy : int
    }

    class Like {
      userId
    }

    WritePost *- Like
  }

  package WriteRepository {
    class WriteRepo {
      addEvent(event: DomainEvent): void
      getEvents(id: string): DomainEvent[]
    }

  }

}

package Synchro {
  class EventBus {
    subscribe(handler : Handler)
    publish(event: DomainEvent)
  }

  class PostHandler {
    doIt(event: DomainEvent)
  }
}

CreatePostCommand --> WriteRepo : "addEvent('CREATED_POST', {id: x, descr: hello})"
LikePostCommand --> WriteRepo : "addEvent('NEW_LIKE', {userId: 123, id: x})"

GetFavoritePostQuery --> ReadRepo

CreatePostCommand --> EventBus : "Event: CREATED_POST"
LikePostCommand --> EventBus : "Event: NEW_LIKE"
LikePostCommand -> LikePostCommand : "Check rules"
PostHandler --> EventBus : "Subscribe"
PostHandler --> ReadRepo : "Update"

@enduml
